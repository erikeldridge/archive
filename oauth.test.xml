<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
    <meta>
        <author>Erik Eldridge</author>
        <description>Unit tests for oauth.xml</description>
        <sampleQuery>select * from {table}</sampleQuery>
		<documentationURL>http://wiki.github.com/erikeldridge/yql-oauth-support/</documentationURL>
    </meta>
    <bindings>
        <select>
            <inputs>
				<key id="tableUri" type="xs:string" paramType="variable"/>
			</inputs>
            <execute><![CDATA[
			
			//credit: http://javascript.crockford.com/remedial.html
			if(!String.prototype.supplant){String.prototype.supplant=function(o){return this.replace(/{([^{}]*)}/g,function(a,b){var r=o[b];return typeof r==='string'||typeof r==='number'?r:a;});};}if(!String.prototype.trim){String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"");};}
			
			tableUri = tableUri || 'http://github.com/yql/yql-tables/raw/master/oauth/oauth.xml';
						
			//cases
			//ref: http://openid.net/specs/openid-authentication-2_0.html#normalization_example
			testCases = [
				function(){
					
					//setup
					var caseResults = {
						'name':'fetch yahoo request token'
					};
					var query = 'use "{tableUri}" as table; select * from table where uri="{uri}" and consumerKey="{consumerKey}" and consumerSecret="{consumerSecret}" and callbackUri="{callbackUri}"'.supplant({
						tableUri: tableUri,
						consumerKey:'dj0yJmk9MXN0dU1pdGNhVEJyJmQ9WVdrOVRYRjNSVTAzTjJzbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD01Mg--',
						consumerSecret: '31b1fa6f03eb3363e042a124bc7ef51b9e69228a',
						callbackUri: 'http://test.erikeldridge.com',
						uri:'https://api.login.yahoo.com/oauth/v2/get_request_token'
					});					
					var queryResults = y.query( query ).results;
					
					//tests					
					if ( -1 === queryResults.toString().indexOf( 'oauth_token' ) ) {
						caseResults['fail'] = 'table should return valid req token, not '+queryResults;
					}
					
					//pass if no tests fail
					if ( !caseResults['fail'] ) {
						caseResults['pass'] = '';
					}
					
					return caseResults;
				}()
			];
			response.object = { "case": testCases };
            
        ]]></execute>
        </select>
    </bindings>
</table>